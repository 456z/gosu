Index: GosuImpl/WindowX.cpp
===================================================================
--- GosuImpl/WindowX.cpp	(revision 533)
+++ GosuImpl/WindowX.cpp	(working copy)
@@ -13,6 +13,50 @@
 #include <X11/Xlib.h>
 #include <X11/Xutil.h>
 #include <X11/extensions/xf86vmode.h>
+
+#ifdef HAVE_XINERAMA
+#include <X11/extensions/Xinerama.h>
+
+namespace {
+    void getXineramaFullscreenPos(Display* dpy, int& x, int& y)
+    {
+        static int orgX = 0, orgY = 0;
+        static bool initialized = false;
+        if (initialized)
+        {
+            x = orgX, y = orgY;
+            return;
+        }
+        initialized = true;
+
+        int dummy;
+        if (XineramaQueryExtension(dpy, &dummy, &dummy) &&
+            XineramaIsActive(dpy))
+        {
+            /* Find out which screen is the desired one */
+            int screens;
+            XineramaScreenInfo *xinerama;
+
+            printf("X11 detected Xinerama:\n");
+            xinerama = XineramaQueryScreens(dpy, &screens);
+            for (int i = 0; i < screens; i++) {
+                printf("xinerama %d: %dx%d+%d+%d\n",
+                    xinerama[i].screen_number,
+                    xinerama[i].width, xinerama[i].height,
+                    xinerama[i].x_org, xinerama[i].y_org);
+                if (xinerama[i].screen_number == 0)
+                {
+                    orgX = xinerama[i].x_org;
+                    orgY = xinerama[i].y_org;
+                    printf("xinerama org: %d %d\n", orgX, orgY);
+                    break;
+                }
+            }
+            XFree(xinerama);
+        }
+    }
+}
+#endif
 
 struct Gosu::Window::Impl
 {
@@ -199,8 +243,13 @@
     if(switched)
     {
         //XFlush(pimpl->dpy);
-        //XSync(pimpl->dpy, 0);
-        XMoveWindow(dpy, window, 0, 0);
+        //XSync(pimpl->dpy, 0);
+        int x = 0, y = 0;
+#ifdef HAVE_XINERAMA
+        getXineramaFullscreenPos(dpy, x, y);
+#endif
+
+        XMoveWindow(dpy, window, x, y);
         XRaiseWindow(dpy, window);
         XGrabPointer(dpy, window, true, 0, GrabModeAsync, GrabModeAsync, window,
             None, CurrentTime);
Index: linux/Makefile.in
===================================================================
--- linux/Makefile.in	(revision 533)
+++ linux/Makefile.in	(working copy)
@@ -19,10 +19,10 @@
 XPLS = ../examples/Tutorial
 
 CXXFLAGS += -I.. @AUDIO_INC@ -Wall \
-    @PANGO_CXX_FLAGS@ @X_INCS@ @HAVE_SYS_STAT_H@ \
+    @PANGO_CXX_FLAGS@ @X_INCS@ @HAVE_SYS_STAT_H@ @HAVE_XINERAMA@ \
 	-I@RUBY_INC_DIR@ -I@RUBY_ARCH_DIR@ -fPIC -DNDEBUG -O3 -pipe -fomit-frame-pointer
 
-LIBS = @AUDIO_LIBS@ -L@x_libraries@ -lX11 \
+LIBS = @AUDIO_LIBS@ @x_libraries@ -lX11 \
     @PANGO_LIBS@ -lpng -lGL -lGLU -lglut -lXxf86vm #-lboost_thread
 
 RUBY_LIBS = $(LIBS) @RUBY_LIBS@ @DLOPEN_LIB@ -lm -lc -lcrypt #-lboost_thread
Index: linux/configure.ac
===================================================================
--- linux/configure.ac	(revision 533)
+++ linux/configure.ac	(working copy)
@@ -28,8 +28,8 @@
   X_INCS="-I"$x_includes
 fi
 AC_SUBST(X_INCS)
-AC_SUBST(x_libraries)
 
+# Does this actually do anything??!! Aaaahhh!!!!!
 if test $x_libraries; then
   LIBS="$LIBS -L$x_libraries"
 fi
@@ -37,6 +37,13 @@
 #AC_CHECK_LIB([Xxf86vm], [XF86VidModeGetModeLine], ,
 #  AC_MSG_ERROR(Missing Xxf86vm))
 
+AC_CHECK_LIB([Xinerama], [XineramaQueryScreens], HAVE_XINERAMA=-DHAVE_XINERAMA)
+AC_SUBST(HAVE_XINERAMA)
+if test $HAVE_XINERAMA; then
+  x_libraries="$x_libraries -lXinerama" # I think this is pretty ugly and a hack :/
+fi
+AC_SUBST(x_libraries)
+
 #AC_CHECK_LIB([png], [png_create_read_struct], , AC_MSG_ERROR(Missing libPNG))
 # FIXME: Replace `main' with a function in `-lrt':
 #AC_CHECK_LIB([rt], [main])
@@ -124,3 +131,5 @@
 #AC_CONFIG_FILES([Makefile_])
 AC_OUTPUT(Makefile)
 
+AC_SUBST(LIBS)
+
