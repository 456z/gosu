#summary Gosu's mixup between a roadmap and a short-term to-do list.
#labels Featured

= 0.7.9 (pending on Linux) =
  * TextInput impl on Linux
  * Fix the whole X11 mess on Linux… I mean, the X11 port of Gosu, not the mess itself ;/
  * Note: Linux workaround: metacity --replace seems to work wonders.

= 0.7.9.5 (will MAYBE be pulled into the 0.7.0 series without breaking compatibility) =
  * Ruby 1.9.0 support
  * Testing around with multiple monitors on Windows
  * get rid of OpenGL tearing on Windows (Intel GMA 950)
  * don't round updateInterval on Windows
  * don't round updateInterval on Linux
  * implement frameskip
  * be able to have more FPS than Hz despite working vsync
  * Unify documentation!
  * also, Font should respect monospaced fonts and fonts with very weird kerning (Zapfino...)
  * make the Ruby wrapper's menu bar more complete on OS X

= 0.8.0 (after a cleanup/documentation delay)=
  * Experimentation: Don't switch resolution EVER but stretch in software? Would probably look better on TFT's and be less error prone.
  * Experimentation: Should the C++ version keep using wstring, or switch to UTF-8 strings?
  * clean up Ruby's interface; draw_quad and friends should require the Z parameter (BREAKS CODE)
  * rewrite Gosu::Input with support for multiple gamepads and analog joysticks, serializable button IDs, …
  * maybe rewrite Gosu::Image with support for clipping and other things
  * provide C++ application templates where possible, maybe even installers for the templates

= Major design goals for 0.8.x (graphics, polish) =
  * much improved text output system, at the VERY least/as a first step, Font shouldn't be forced to be bold
  * more alpha modes, yay!
  * find a way to factor rot flips out of Gosu => Image/draw redesign
  * implement clipping and a target() modifier for the new Image
  * speed up LargeImageData!
  * Apple remote support would rule.
  * clean up after playing around with possible optimizations
  * assure Gosu::File also creates directories as necessary
  * more C++ examples

= Major design goals for 0.9.x (IO) =
  * the window argument in Ruby is annoying, because only one window can be used anyway. Maybe it should be Window.run, and all open Windows should work.
  * simplify Gosu's IO philosophy (C++)
  * document Gosu's Sockets

= Major design goals for 1.x (perfection) =
  * Windows: Input will regularly query devices which are not currently attached, thereby causing the game to halt every few seconds - think about this
  * FSAA/mipmap experiments
  * force feedback would be cool
 