#summary List of upcoming To Do items, refreshed daily.
#labels Featured

= To Do list =

This list of tasks is exported automatically from my OmniFocus projects.
(Last update: 2009-05-20)

== Gosu 0.7.x ==
  * configure: Gucken ob libruby auch per config gesucht wird
  * Publish Gosu 0.7.13.4 for Linux 1.9/multiruby compat.
  * Reply to Gosu::random mail
  * Look into Windows linking trouble :(
  * Web work
    * Move three threads from GosuExchange to the forums
    * Ask some forum whether the Intel GMA950 and X3100 chips really don't support OGL vsync on Windows
    * Ask some forum why the IntelCPUPowerManagement could hang for 42sec
    * Report Ocra bugs: spaces in exe name = crash, requires .rb and .so files?!
  * Finish OpenAL on OS X!
    * Use OpenAL for OS X too
    * Start list of supported sound/song formats
    * Try to add dynamic MikMod loading code
  * 0.7.13.5 (bugfixes bugfixes bugfixes)
    * Quick look: How hard is MacRuby support?
    * See if John Shea's talk had something about not being locked to pixel positions
    * See if really old games have problems running in current Gosu
    * Give multitruby support a second try (fix the problem with AC_PROGRAM_WHATEVER)
    * Verify that TextInput works cleanly on Ruby 1.9 with Unicode
    * Add the Gosu<->Radian scaling to C++ too (Math.hpp)
    * Add support for giving font flags from Ruby
    * Complete the list of Gosu::Colors, inspired by the CSS colors, and move them to Color
    * Screen size / fullscreen stuff
      * Iterate on first category of fullscreen tests
      * Allow adjustment of the virtual touchscreen resolution
      * Make initial window black instead of garbled on OS X
      * Windows: Don't fail if the requested windowed resolution is too large
      * Add fullscreen accessors to make proper FS OpenGL possible
      * Add fullscreen stretching prevention
      * Try not to hide the mouse cursor outside of the main window on OS X
      * Test multiple screens on Windows
    * TextField with clip_to (update example)
    * Test LD14 entry on Linux
    * Rebuild the .so files on Windows
    * Release 0.7.13.5
    * Document Font#name, Font#height, Font#flags
    * (1x mymüsli for all the hard work! (motivation!)
  * iPhone-related stuff that should be finished soonish
    * Finish OpenAL port of Gosu::Audio (Ogg Songs)
    * Fix "too many fingers" bug on iPhone
    * Implement Proof of Concept for Macro Patches
    * socket.bundle und syck.bundle in den Wrapper reinschweißen
    * Integrate "fat" iPhone building from forum
    * Clear up GOSU_IS_MAC vs. GOSU_IS_OSX
    * Use getBytes instead of UTF8String
  * Try a quick prototype of Gosu working with Shoes (if that doesn't work, wxRuby)
  * Try harder to reproduce these bugs
    * Get rid of context selection error with driver set to always do FSAA (Windows)
    * OS X: Release all keys on battery notification dialog (?)
  * Finish the RMagick bundling thing
    * Try to build RMagick.bundle against the 10.4 SDK
    * Link the all-in-one-bundle from the boards: http://rubyforge.org/forum/forum.php?thread_id=26872&forum_id=32
    * Test RMagick.bundle on Tiger
    * Test RMagick.bundle on PPC
  * 0.7.14, text quality release (+Linux gamepad!)
    * Font should respect monospaced fonts and fonts with very weird kerning (Zapfino...): do research
    * Image#from_text should support maxWidth=0 => no limits on size
    * Linux: Support Unicode in title bar
    * Linux: Support other XKeySyms than Latin 1
    * Mac: Add dead keys to TextInput
    * Mac: Make createText use Core Text
    * Windows: Make createText use Uniscribe
    * Linux: Make createText use Pango/Freetype2
    * Make RTL work without RTL/LTR markers?!
    * Add RTL support to Font::drawRot too
    * Add Linux gamepad support
  * 0.7.15, polish/deployment release
    * Make it possible to delete images while they are still referenced in the queue.
    * Assure that files from doxygen task are considered for packaging
    * RMagick auf Windows statisch kompilieren: http://rubyforge.org/forum/forum.php?thread_id=26872&forum_id=32
    * Find out why Cmd+char triggers two button_downs, but only one button_up!
    * Review: http://rubyforge.org/tracker/index.php?func=detail&aid=21405&group_id=375&atid=1504
    * Make sure README and LICENSE are appropriately named in the Gem?
    * Collect Gosu YouTube videos and link them prominently
    * Create a dynamic screenshot page for all the topics in the Showcase
    * Mac OS: Mauszeiger wird im FS sichtbar bei Klick in obere linke Ecke: Warum?
    * Examples leichter findbar machen
    * Bessere Ruby-Deployment-Hilfen
    * Assure that files from doxygen task are considered for packaging
    * FMOD3: Sound auf Vista blockiert bei mehreren Benutzern?
    * Windows build task possible? Clarify
    * Look how http://github.com/singpolyma/rubygame/tree/master gets the Debian packaging done
    * Rakefile sollte autoconf ausführen
    * Linux: Either install gosu.so to Ruby libdir, or don't build it at all
    * Deployment-Hilfe, Rakefile, Mac
    * Add Wiki tutorial on how to lazily link FMOD
    * Deployment-Hilfe, Rakefile, Win
    * Retry properly showing/hiding the mouse on OS X (immune to blocking main thread)
    * Make the wrapper's menu bar on OS X more complete
    * Now that the Rakefile works, stop doing every task every time (use file dependencies)
    * Make it easier to find the examples from the Gem
  * Make plans for an official Scene system
  * Look at http://rubyforge.org/projects/rbplusplus
  * Look at http://freeimage.sourceforge.net/requirements.html
  * Look at http://slick.cokeandcode.com/index.php?entry=entry080426-213044
  * Experiment: resizing the window possible?
  * Experimentation with new drawing syntax; maybe first prototype as the last version of the 0.7.x series?
  * Create concept: Allow custom OpenGL actions to be put into the Z ordering queue
  * More alpha modes! http://www.adobe.com/devnet/pdf/pdfs/blend_modes.pdf
  * Document Gosu::interpolate, improve it too?
  * Experiment: resizing the window possible?
  * Introduce 0.8 syntax
    * Make sure Images can live without a Window (context!)
    * Add Image::Image *and set hardBorders to true on default*
  * Think: Possible to have beautiful quotation mark indenting?@Gosu Text
  * Benchmark clip_to; worth replacing with stencils?
  * See if other libraries catch the release of the 'A' key in cmd+a
  * Add rdoc to Gosu gem
  * Make Linux gemspec more robust wrt examples/
  * Make more stuff configurable like http://github.com/cout/rice/blob/98ba7098e2de5849f2e7272021340976a768456f/ruby.ac#L7-20
== Gosu CI/Usability ==
  * Automate selection of the "Project of the Day" + screenshot (Rake task & cronjob)
  * Add gallery of images from Gosu Showcase board
  * Somehow strip the directory from the rdoc filenames
  * Document 64px minimum for single-texture opt.
  * Mention Gosu's respectable age somewhere :)
  * Link to benkos example
  * Paste spiit up BasicConcepts into doxygen sources
  * Put RubyTutorial into rdoc
  * Add some first eye catchers to front page
  * Add "What now?" link list to front page
  * Adjust sample games
  * Link YouTube videos, and maybe blog tags like http://www.cuberick.com/search/label/gosu?
  * Change sender address of forum mailer
  * Make logo in forum clickable
  * Make logo in Rdoc clickable
  * Setup github homepage
  * Link ChangeLog and ToDo on front page
  * Make sure createText is visible in Doxygen
  * Ask forum what overload for draw_quad would make sense
  * Add OpenGL Wiki page
  * Add Unicode Support wiki page
  * Ruby/Gosu Icon: Fix ugly shadow
  * Add some RSS feed to main index.html page
  * Make tt blocks prettier on front page
  * Make Ruby 1.9.1 wrapper a separate download
  * Turn changelog and todo into links on frontpage
  * Change bundle identifier to org.libgosu.UntitledGame
  * Automatically run push_to_github task
  * Try to translate the RubyTutorial to Japanese :)
  * Deployment wiki page/rdoc: Mention Icon resource support!
== Gosu 0.8.x (preliminary) ==
  * Flesh out tasks below …
  * Think about using pre-multiplied alpha internally: http://home.comcast.net/~tom_forsyth/blog.wiki.html
  * Experimentation: In Ruby, can the window be a singleton and still provide the ability to inherit from it? (Singleton standard class)
  * Use float instead of double everywhere
  * Redesign (see forum) drawing interface
  * Rewrite Gosu::Input with support for multiple gamepads and analog joysticks, serializable button IDs, …
  * Windows: Input will regularly query devices which are not currently attached, thereby causing the game to halt every few seconds - think about this
  * FSAA/mipmap experiments
  * force feedback would be cool
  * Provide C++ application templates where possible, maybe even installers for the templates
  * much improved text output system, at the VERY least/as a first step, Font shouldn't be forced to be bold
  * more alpha modes, yay!
  * find a way to factor rot flips out of Gosu => Image/draw redesign
  * implement clipping and a target() modifier for the new Image
  * speed up LargeImageData?!
  * Apple remote support would rule.
  * clean up after playing around with possible optimizations
  * assure Gosu::File also creates directories as necessary
  * more C++ examples
  * the window argument in Ruby is annoying, because only one window can be used anyway. Maybe it should be Window.run, and all open Windows should work.
  * simplify Gosu's IO philosophy (C++)
  * document Gosu's Sockets
