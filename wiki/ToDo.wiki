#summary Gosu's ToDo list.
#labels Featured

= Scheduled for 0.7.5 or something =
  * use OpenGL on Windows
  * allow/document custom OpenGL integration

= Also ASAP =
  * make sure createText does NOT chop off pixels on OS X!!
  * assure Gosu::File also creates directories as necessary
  * bundle fmod.dll
  * more sophisticated Audio interface for talking NPC's etc.
  * testing on Vista
  * special characters should work reliably/in a documented way in Ruby

= Major design goals for 0.7.x (input redesign) =
  * text input system for chat boxes, high-score lists etc.
  * rewrite Gosu::Input with support for multiple gamepads and analog joysticks, serializable button IDs, â€¦
  * make the Ruby wrapper's menu bar Command-Q work on OS X!
  * generate Rdoc

= Major design goals for 0.8.x (IO, timing) =
  * delegate Linux support, esp. wrt. gamepads (*help!!*)
  * the window argument in Ruby is annoying, because only one window can be used anyway. Maybe it should be Window.run, and all open Windows should work.
  * simplify Gosu's IO philosophy (C++)
  * redesign Gosu::Window to be more useful for framerate independent games?
  * anyway, get rid of WM_TIMER
  * With UTF-8 support in C++ coming, get rid of all the wstring stuff. -> http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2209.html
  * document Gosu's Sockets

= Major design goals for 0.9.x (graphics) =
  * find a way to factor rot flips out of Gosu => Image/draw redesign
  * implement clipping and a target() modifier for the new Image
  * multi-threaded blit queue and float-z-ordering?

= Major design goals for 1.x (perfection) =
  * Windows: Input will regularly query devices which are not currently attached, thereby causing the game to halt every few seconds - think about this
  * FSAA dammit!!