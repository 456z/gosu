#summary Log of Gosu's development.
#labels Featured

=0.7.9=
  * All: OpenGL allocates depth buffer, allows for better custom OpenGL effects.
  * Mac: Fixed a bug where fullscreen mode could rearrange desktop icons (and otherwise confuse OS X).
  * Mac: Added mouse wheel support.
  * Windows: Fullscreen mode allows alt+tab switching.
  * Windows: Fixed mouse wheel support.

=0.7.8.5=
  * All: Much better HSV interface. Hope this doesn't already break any code.
  * All: Audio interface VASTLY extended! Yay.
  * Linux: SDL_mixer port much closer to FMOD one.
  * Mac: Fixed right-click detection

=0.7.8=
  * Mac, Windows: Font substitution works, i.e. chars outside of the selected font can be used (こんにちは日本！)
  * Mac, Windows: Custom font loading—just use a TTF filename as a font name (must contain '/')
  * Mac: Fixed Window#button_id_to_char
  * Mac: Window now pops up in the front when run from the Terminal
  * Windows: Fixed fullscreen mode
  * Linux: Removed optimization that prevented 64bit compilation
  * Linux: Fixed compilation error (boost::none.hpp was missing, thanks to Ryan Baxter)
  * Ruby: Another cool Chipmunk/RMagick demo by Robert Sheehan
  * Ruby: HSV color support as in C++

=0.7.7=
  * All: Gosu now uses doubles as Z positions
  * All: Gosu allows for custom OpenGL integration, (Ruby) example game included
  * Mac, Linux: Additive drawing fixed
  * Mac: Leopard compatibility
  * Mac: Vsync finally enabled—was *so* more necessary @ 60 Hz
  * Windows: Gosu now uses OpenGL instead of Direct3D (less code to maintain, more game portability)
  * Windows: Vsync also enabled (didn't work on Intel chipset though...)
  * Ruby: Gosu::sleep was not supposed to exist, now killed (did overwrite Ruby's sleep when include'ing Gosu)
  * Ruby: Gosu now cooperates with Ruby's multitasking
  * Ruby: Chipmunk integration example

=0.7.6=
  * All: Fixed a bug potentially cutting off text on all platforms
  * All: Fixed a bug which would exclude lines from very long text
  * All: updateInterval is now a float, not an integer. On systems other than OS X, it is effectively rounded upwards, though. The new default value is 16.666666 (= 60 FPS).
  * Ruby: RMagick Images can be passed instead of filenames + example game
  * Ruby: Image#draw_as_quad

=0.7.5=
  * All: functions for button id<>character conversion are static now. Code shouldn't break.
  * Ruby: Fixed name clash in CptnRuby.rb
  * Ruby: Fixed memory leaks in load_tiles and from_text (thanks to Galin Yordanov!)
  * Linux: Some changes for UTF-8 support (thanks to Galin Yordanov again)
  * Linux: Hid mouse cursor over X11 window (thanks to acetoxy)
  * Mac: Changed userSettingsPrefix to be ~/Library/Preferences
  * Mac: Some changes for Ruby UTF-8 support
  * Windows: Strings in Ruby programs now must be UTF-8 encoded
  * Windows: FMOD.dll ships with Gosu now (RubyGosu adjusted to find it magically)

=0.7.4=
  * Mac: Hats work more reliably than in 0.7.3 (and SDL :P)
  * Ruby: Ooops - exceptions don't halt everything anymore.

=0.7.3=
  * Mac: Gamepad support at last!
  * Ruby: New example game/exercise collection ‘Cptn. Ruby’
  * All: Added README.txt file to tell people to read the wiki.

=0.7.2=
  * Mac/Ruby: The cumbersome .app wrapper is now only used for deployment; for development, running Gosu applications from the Terminal is now possible.
  * Ruby: Re-added missing mouse_x/mouse_y/width/height accessor functions in Window. Thanks mutwin.kraus! ;)
  * Ruby: Removed the annoying "type" argument for Song#initialize. *Breaks code*, even if this is not a milestone release ;(
  * C++: Added (simplified!) constructors that take filenames to classes Image, Sample and Song; also loadImagesFromTiledBitmap accepts a filename. See reference.
  * C++: Changed back Button:isDown to be Input::down(Button). There was kind of a mess going on, esp. because the tutorials were outdated.
  * Win/Ruby: Tutorial media files were missing, sorry!

=0.7.1=
  * Win: Moved to SWIG too.
  * Mac: Fixed build script.
  * Linux: Added SDL_mixer fallback. Yay, thanks nornagon!

=0.7.0=
  * Moved to Google Code!
  * Mac: implemented idToChar/charToId
  * Mac: implemented fullscreen
  * C++: Input uses Gosu::Button instead of unsigned for identification. *Breaks code.*
  * Ruby: clearer Mac game distribution scheme
  * Ruby: moved to SWIG
  * Ruby: MUCH improved exception handling
  * Ruby: Some arguments swapped to become consistent with C++'s order. *Breaks code.*

=0.6.5=
  * Linux, Mac: Fixed File.

=0.6.4=
  * Linux: Made texture binding lazier; this seriously speeds up Gosu on some 3D drivers.
  * Linux: Made checking for fmod more tolerant.
  * Mac: simplified keyboard code; if this breaks something please inform us!
  * Mac: Universal at last!
  * Mac: updated to .xcodeproj files
  * Win: Updated to more recent library versions.

=0.6.3=
  * Mac: added mouse clicking and hiding

=0.6.2=
  * Mac: Now even fixed Gosu/Input for C++!
  * Win: Another Input bug fixed.

=0.6.1=
  * All: Fixed the stuff that the 0.6.0 update broke
  * Linux, Mac: Improved installation routine

=0.6.0=
  * All: Added Mac support
  * Ruby: Added draw_line and draw_triangle

=0.5.1=
  * All: Added Gosu::File and made it the prefererred option over loadFile/saveFile

=0.5.0=
  * All: Fixed Song::playing
  * All: Replaced Gosu::Streams by new Gosu::IO system
  * Win: Fixed Gosu::argument() splitting
  * Win: Fixed Gosu::argument() range checking

=0.4.3=
  * All: globally replaced Bitmap::replace() by applyColorKey() for color keying
  * All: added Win::appFilename and Win::appDirectory
  * All: added Gosu/Compression.hpp

=0.4.2=
  * All: fixed some bugs in Song
  * All: multiple instances of Audio prohibited
  * All: added distance()
  * All: added numpad keyboard IDs
  * Unix: Compile OpenAL if fmod isn't found

=0.4.1=
  * Ruby: Some documentation improvements
  * Ruby: Linux bug fixes
  * Ruby: draw_quad fixed

=0.4.0=
  * All: merged documentation and website into one
  * All: tutorial greatly improved
  * Ruby: tutorial now supports Ruby
  * Ruby: reference improved

=0.3.2=
  * MSVC: fixed linker errors (remains of MSVC6 compatibility)
  * GCC: improved config script
  * Ruby: added Linux support
  * Ruby: improved exception stability

=0.3.1=
  * MSVC: removed non-working MSVC6 compatibility (hopeless)

=0.3.0=
(initial release)
 
 
 
 