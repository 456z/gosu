#summary How to set up Gosu on Linux (or FreeBSD).

[http://www.libgosu.org/cgi-bin/mwf/forum.pl http://www.libgosu.org/wiki_images/board_link.png]

= Dependencies =

To install Gosu in any form, you will need the following packages (install via `sudo apt-get install <packagename>`):
  * g++
  * libgl1-mesa-dev
  * libpango1.0-dev
  * libboost-dev
  * libsdl-mixer1.2-dev

*Copy-and-pastable command line* for Ubuntu 8.04 (Hardy Heron) *without* Ruby support:

{{{
sudo apt-get install g++ libgl1-mesa-dev libpango1.0-dev libboost-dev libsdl-mixer1.2-dev
}}}

Ruby/Gosu will be built if the following packages are installed as well:
  * ruby
  * ruby1.8 
  * ruby1.8-dev

*Copy-and-pastable command line* for Ubuntu 8.04 (Hardy Heron) *with* Ruby support:

{{{
sudo apt-get install g++ libgl1-mesa-dev libpango1.0-dev libboost-dev ruby ruby1.8 ruby1.8-dev libsdl-mixer1.2-dev
}}}

= Ruby Gem =

If you are only interested in using Gosu with the Ruby programming language, you can install it as a Ruby gem via `sudo gem install gosu`. You will still have to install the packages listed above, though.

= Ruby 1.9 Support =

To use Gosu with Ruby 1.9, just replace all occurences of 1.8 with 1.9. The copy-and-pastable command line is thus:

{{{
sudo apt-get install g++ libgl1-mesa-dev libpango1.0-dev libboost-dev ruby1.9 ruby1.9-dev libsdl-mixer1.2-dev
}}}

Afterwards, `gem install gosu` should work.

= Compiling Gosu =

To compile Gosu, `cd` into the `linux` subdirectory and run:

{{{
./configure
make
}}}

There is a deprecated 'make install' command that will work for C++, but as most Linux distributions are using a package manager we recommend copying the resulting `linux/libgosu.a` file to your game's directory manually.
For using Ruby/Gosu, you can install Gosu globally by copying the resulting `linux/gosu.so` file to `/usr/lib/ruby/site_ruby/${your-ruby-version-here}/${your-arch-here}-linux/`, or also copy it next to your Ruby source files where it will be found.

= Using Ruby/Gosu =

Just require `gosu.so` (`require 'gosu'`) and everything should work fine. If you are using RubyGems, remember to `require 'rubygems'` first. If not, you can copy gosu.so around to accompany your Ruby source files.

= Using C++ Gosu =

(The following assumes that you have installed Gosu system-wide via `sudo make install`. If not, you will have to add paths as necessary.)

You have to compile with ``gosu-config --libs``` and -Igosu ```gosu-config --cxxflags``, so a simple Makefile could look like this:

{{{
OBJS = main.o player.o
CXXFLAGS += `gosu-config --cxxflags`
LIBS = -lgosu `gosu-config --libs`

myGame: $(OBJS) libgosu.a
        g++ -o myGame $(OBJS) libgosu.a $(LIBS)
}}}